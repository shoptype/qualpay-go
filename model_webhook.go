/*
 * APIs
 *
 * This document describes the Platform and PG API.
 *
 * API version: 2.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type Webhook struct {
	// <strong>Format: </strong>Variable length, up to 10 N<br><strong>Description: </strong>A unique ID generated to identify a webhook.
	WebhookId int64 `json:"webhook_id,omitempty"`
	// <strong>Format: </strong>Variable length, up to 16 N<br><strong>Description: </strong>The node at which the webhook will be created. If a merchant id is sent in this field, the webhook is created for the merchant. If a webhook_node is not included in the request, the webhook will be created at the api key's node. 
	WebhookNode string `json:"webhook_node,omitempty"`
	// <strong>Format: </strong>Variable length, up to 16 AN<br><strong>Description: </strong> Status of the webhook. Following are descriptions of the statuses              <ul>              <li>ACTIVE - The webhook is active.</li>              <li>DISABLED - The webhook was disabled by the user. </li>              <li>SUSPENDED - The webhook was suspended by the system. A webhook is suspended when the system is unable to post a request for 48 hours. </li>              </ul>While a webhook is disabled or suspended, no new requests will be posted or added for it. If there are existing requests for this webhook in the request queue, they will be held.
	Status string `json:"status,omitempty"`
	// <strong>Format: </strong>Variable length, up to 64 AN<br><strong>Description: </strong>A label to identify the webhook.
	Label string `json:"label"`
	// <strong>Format: </strong>Variable length, up to 256 AN<br><strong>Description: </strong>The webhook endpoint to which requests will be posted. The endpoint must use HTTPs and should serve HTTP POST requests. The endpoint URL should respond with an HTTP 2xx response.  Any other HTTP response message is considered a failure and we will retry posting the same request until a successful response is received or the request expires, whichever comes first. 
	NotificationUrl string `json:"notification_url"`
	// An array of email addresses that will be notified when a webhook is suspended.
	EmailAddress []string `json:"email_address,omitempty"`
	// An array of events that will trigger the POST request. Refer to <a href=\"/developer/api/reference#guides/webhooks-schema\" target=\"_blank\">Webhook Request Schema</a> for a list of available events.
	Events []string `json:"events,omitempty"`
	// <strong>Format: </strong>Variable length AN, in YYYY-MM-DD HH:mm:ss format<br><strong>Description: </strong>Webhook creation timestamp.
	DbTimestamp string `json:"db_timestamp,omitempty"`
	// <strong>Format: </strong>Variable length, up to 32 AN<br><strong>Description: </strong>A secret that will be used to generate the x-qualpay-webhook-signature header. We sign each webhook request using the x-qualpay-webhook-signature header. This signature can be used to validate that a request is initiated by us.  The signature is a Base 64 encoded HMAC-256 digest generated from the request payload using the webhookâ€™s secret.This secret can be viewed only when adding a webhook. Use Merchant Manager to change the secret. 
	Secret string `json:"secret,omitempty"`
	// <strong>Format: </strong>Variable length, up to 8 AN<br><strong>Description: </strong>The  authentication type. By default the authentication type will be NONE. Following are descriptions of the statuses              <ul>              <li>NONE  - No authentication</li>              <li>BASIC - The POST request will be secured by HTTP BASIC authenticaiton. user_password field should be provided for basic authenticaiton. </li>              </ul>
	AuthType string `json:"auth_type,omitempty"`
	AuthSettings *WebhookAuthSetting `json:"auth_settings,omitempty"`
}
